var sqlmap = {
  log: 'insert into loginfo (logtime,userid,loginfo) values (?,?,?)',
  login_web: 'select a.*,b.name departname,b.userid from user a LEFT JOIN department b on (a.depart = b.id) where username = ? and password = ?',
  login_app: 'select a.*,b.name departname,b.userid from user a LEFT JOIN department b on (a.depart = b.id) where username = ? and password = ? and enableapp = 1',
  getstorearea: 'select * from store_area',
  getstorebasic: 'SELECT store.*,  department.name departname,System_name,Region_name,Contacts_name,Tel,user.realname from store left join store_area on (store.System_id=store_area.System_id AND store.Region_id=store_area.Region_id ) left JOIN store_contacts on (store_contacts.Store_id = store.Store_id) left join user on (store.user_id = user.username) left join department on (department.id = user.depart)',
  getstorecontacts: 'select store_contacts.*,Store_name from store_contacts left join store on (store_contacts.Store_id = store.Store_id)',
  getstoredisplay: 'select * from store_display',
  getproduct: 'select * from product',
  getproductpricecount: 'select count(*) from product_price',
  getproductprice: 'select product_price.*,Store_name,Product_name from product_price left join store on (product_price.Store_id = store.Store_id ) left join product on (product_price.Product_id = product.Product_id) limit ?,10',
  getproductstockcount: 'select count(*) from product_stock',
  getproductstock: 'select product_stock.*,Store_name,Product_name from product_stock left join store on (product_stock.Store_id = store.Store_id ) left join product on (product_stock.Product_id = product.Product_id) limit ?,10',
  getproductbrand: 'select * from product_brand',
  getpromotiontype: 'select * from promotion_type order by promotion_type',
  getpromotioncount: 'select count(*) from promotion',
  getpromotion: 'select promotion.*,Store_name,Product_name from promotion left join store on (promotion.Store_id = store.Store_id ) left join product on (promotion.Product_id = product.Product_id) left join promotion_type on (promotion.Promotion_type = promotion_type.Promotion_type) limit ?,10',
  getuser: 'select a.*,b.name departname,b.userid from user a left join department b on (a.depart = b.id) where a.enableapp = 1',
  adduser: 'insert into user(username,password,realname,phone,email,depart,role,enableweb,enableapp) values(?,?,?,?,?,?,?,?,?)',
  moduser: 'update user set username = ? , password = ?, realname = ?, phone = ?, email = ?, depart = ?, role = ?, enableweb = ?, enableapp = ? where id = ?',
  deluser: 'delete from user where id = ?',
  getdepart: 'select * from department',
  adddepart: 'insert into department(name,parentid,userid,path) values(?,?,?,?)',
  moddepart: 'update department set name = ? , userid = ? , path = ? where id = ?',
  deldepart: 'delete from department where id = ?',
  getpermissontype: 'select * from permissontype',
  getrole: 'select * from role',
  addrole: 'insert into role(name,level,permisson) values(?,?,?)',
  modrole: 'update role set name = ? , level = ?, permisson = ? where id = ?',
  delrole: 'delete from role where id = ?',
  getpath: 'select * from path',
  getpathdetail: 'select a.*,b.Store_name from path_detail a INNER JOIN store b on(a.Store_id = b.Store_id)',
  getpath_app: 'select a.*,Path_name,Store_name from path_detail a INNER JOIN path b on (a.path_id = b.path_id) INNER JOIN store c on (a.store_id = c.store_id) where c.store_id in ',
  getplan: 'select a.*,b.Path_Name,c.Store_name,c.Gps_x,c.Gps_y,d.city_lev from plan a LEFT JOIN path b ON (a.Path_Id = b.Path_id) LEFT JOIN store c on (c.Store_id = a.store_id) LEFT JOIN city d on (c.city_id = d.city_id)',
  addplan: 'insert into plan (Plan_Type,Plan_Date,Path_Id,Store_Id,Store_Name,User_Id) values (?,?,?,?,?,?)',
  delplan: 'delete from plan where userid = ? and year = ? and month = ? and day = ?',
  resign: 'update plan set isfinish = 0, signin_time = null, signin_gps_x = null,signin_gps_y = NULL, signout_time = NULL,signout_gps_x = null,signout_gps_y = NULL where userid = ? and year = ? and month = ? and day = ? and store_id = ?',
  getplansum: 'select * from plan_sum where userid = ? and year = ?',
  updateplansum: 'replace into plan_sum(userid,year,month,storeCount,storeACount,storeBCount,storeCCount,storeA,storeB,storeC,cover) VALUES(?,?,?,?,?,?,?,?,?,?,?) ',
  insertplan: 'insert into plan(userid,year,month,day,plan_date,plan_type,path_id,store_id) values(?,?,?,?,?,?,?,?) ',
  getstoreproduct: 'select a.*,b.Product_name,b.Brand_id from product_price a INNER JOIN product b on(a.Product_id = b.product_id) where Store_id = ?',
  signin: 'update plan set signin_time=?,signin_gps_x=?,signin_gps_y=? where userid=? and year=? and month=? and day=? and store_id=? and ISNULL(signin_time) ',
  signin2: 'update plan set signin_gps_x=?,signin_gps_y=? where userid=? and year=? and month=? and day=? and store_id=? ',
  signout: 'update plan set signout_time=?,signout_gps_x=?,signout_gps_y=?,isfinish=1 where userid=? and year=? and month=? and day=? and store_id=? and ISNULL(signout_time) ',
  checksign: 'insert into sign_check (signtime,gps_x,gps_y,userid) values (?,?,?,?)',
  getsignlist: 'select * from sign_check where userid=? and signtime like ?',
  getproductbystore: 'select a.*,b.Product_name,b.Brand_id from product_price a left join store c on (a.Store_id = c.Store_id ) left join product b on (a.Product_id = b.Product_id) where a.store_id = ?',
  submitproductimage: 'replace into product_image (store_id,brand_id,display_id,product_id,user_id,year,month,day,submitdate,filename,type,category) values(?,?,?,?,?,?,?,?,?,?,?,?)',
  submitshelfmain: 'replace into visitor_shelfmain (store_id,product_id,user_id,year,month,day,plan_date,count) values(?,?,?,?,?,?,?,?)',
  delshelfmain: 'delete from visitor_shelfmain where year = ? and month = ? and day = ? and store_id = ? and user_id = ?',
  submitstock: 'replace into visitor_stock (store_id,product_id,user_id,year,month,day,plan_date,count,onway) values(?,?,?,?,?,?,?,?,?)',
  delstock: 'delete from visitor_stock where year = ? and month = ? and day = ? and store_id = ? and user_id = ?',
  submitshelfaway: 'replace into visitor_shelfaway (store_id,product_id,user_id,year,month,day,plan_date,display_id) values(?,?,?,?,?,?,?,?)',
  submitshelfawaycount: 'replace into visitor_shelfaway_count (store_id,user_id,year,month,day,display_id,count) values(?,?,?,?,?,?,?)',
  delshelfaway: 'delete from visitor_shelfaway where year = ? and month = ? and day = ? and store_id = ? and user_id = ?',
  submitchat: 'replace into visitor_chat (store_id,user_id,year,month,day,plan_date,storeuser,chatcontent,chatresult) values(?,?,?,?,?,?,?,?,?)',
  getpromotionbystore: 'select b.promotion_name,c.product_name,a.* from promotion a LEFT JOIN promotion_type b on a.Promotion_type = b.Promotion_type LEFT JOIN product c on c.Product_id = a.product_id where Store_id = ? and date4 >= ?',
  submitpromotion: 'replace into visitor_promotion (store_id,product_id,user_id,year,month,day,display_id,pos,count,tbcount,user_confirm) values(?,?,?,?,?,?,?,?,?,?,?)',
  delpromotion: 'delete from visitor_promotion where year = ? and month = ? and day = ? and store_id = ? and user_id = ?',
  getvisitorplan: 'select b.Store_name,e.City_lev,b.Gps_x,b.Gps_y,c.realname,d.path_name,a.* from plan a LEFT JOIN store b ON (a.store_id = b.Store_id) LEFT JOIN user c ON (a.userid = c.username) LEFT JOIN path d ON (a.path_id = d.path_id) LEFT JOIN city e ON (e.City_id = b.City_id) where (userid like ? or realname like ?) and plan_date BETWEEN ? and ? ',
  getvisitorchat: 'select b.Store_name,c.realname,a.* from visitor_chat a LEFT JOIN store b ON (a.store_id = b.Store_id) LEFT JOIN user c ON (a.user_id = c.username) where (a.user_id like ? or realname like ?) and a.plan_date BETWEEN ? and ? ',
  getvisitormainshelf: 'select b.Store_name,c.realname,d.product_name,a.* from visitor_shelfmain a LEFT JOIN store b ON (a.store_id = b.Store_id) LEFT JOIN user c ON (a.user_id = c.username) left join product d on a.product_id = d.product_id where (a.user_id like ? or realname like ?) and a.plan_date BETWEEN ? and ? ',
  getvisitorstock: 'select b.Store_name,c.realname,d.product_name,a.* from visitor_stock a LEFT JOIN store b ON (a.store_id = b.Store_id) inner JOIN user c ON (a.user_id = c.username) left join product d on a.product_id = d.product_id where (a.user_id like ? or realname like ?) and a.plan_date BETWEEN ? and ? ',
  getvisitorshelfaway: 'select b.Store_name,c.realname,d.product_name,a.* from visitor_shelfaway a LEFT JOIN store b ON (a.store_id = b.Store_id) LEFT JOIN user c ON (a.user_id = c.username) left join product d on a.product_id = d.product_id where (a.user_id like ? or realname like ?) and a.plan_date BETWEEN ? and ? ',
  getshelfawayimage: 'select b.Store_name,c.realname,a.* from product_image a LEFT JOIN store b ON (a.store_id = b.Store_id) LEFT JOIN user c ON (a.user_id = c.username) where type = 1 and b.Region_id = ? and a.year = ? and a.month = ?',
  getvisitorimage: 'select * from product_image where year = ? and month = ? and day = ? and store_id = ? and user_id = ?',
  getshelfmain: 'select * from visitor_shelfmain where year= ? and month = ? and day = ? and store_id = ? and user_id = ?',
  getstock: 'select * from visitor_stock where year= ? and month = ? and day = ? and store_id = ? and user_id = ?',
  getshelfaway: 'select * from visitor_shelfaway where year= ? and month = ? and day = ? and store_id = ? and user_id = ?',
  getshelfawaycount: 'select * from visitor_shelfaway_count where year= ? and month = ? and day = ? and store_id = ? and user_id = ?',
  getstorepromotion: 'select * from visitor_promotion where year= ? and month = ? and day = ? and store_id = ? and user_id = ?',
  getchat: 'select * from visitor_chat where year= ? and month = ? and day = ? and store_id = ? and user_id = ?',
  getsubsidy: 'select a.*,b.* from role a left join subsidy b on (a.id = b.role_id)',
  updatesubsidy: 'insert into subsidy set role_id = ?, ',
  getroutebasic: 'select a.*,b.*,c.*,e.id role_id,e.name rolename,f.City_lev from path_detail a INNER JOIN path b on (a.path_id = b.path_id) INNER JOIN store c on (a.store_id = c.store_id) LEFT JOIN user d on (c.user_id = d.username) LEFT JOIN role e on (e.id = d.role) LEFT JOIN city f on (c.City_id = f.City_id) where ',
  getroutebasicarea: 'select a.*,b.*,c.*,e.id role_id,e.name rolename,f.City_lev from inspect_pathdetail a INNER JOIN inspect_path b on (a.path_id = b.path_id) INNER JOIN store c on (a.store_id = c.store_id) LEFT JOIN user d on (c.user_id = d.username) LEFT JOIN role e on (e.id = d.role) LEFT JOIN city f on (c.City_id = f.City_id) where ',
  getroutecost: 'select a.* from visitor_route a where cdate in (select max(cdate) from visitor_route where path_id = a.path_id and routetype = a.routetype and store_id = a.store_id and cdate <= ?) ',
  updateroutecost: 'insert into visitor_route set cdate = ?, routetype = ?, routemark = ?,path_id = ?, store_id = ?,',
  getpromotionsum: 'select b.user_id,b.store_name,c.product_name,d.realname,a.* from promotion a left join store b on (a.store_id = b.store_id) left join product c on (a.product_id = c.product_id) left join user d on (b.user_id = d.username) where b.Region_id = ? AND pro_name like ?',
  getpromotionimage: 'select a.* from product_image a left join store b on (a.store_id = b.store_id) where b.Region_id = ? AND submitdate BETWEEN ? and ? AND type = 3',
  getpromotionadjust: 'select * from promotion_adjust where pro_id = ?',
  updatepromotionadjust: 'insert into promotion_adjust set pro_id = ?,store_id = ?, ',
  getstockconfig: 'select * from stock_config',
  updatestockconfig: 'replace into stock_config (stock_key,stock_value) values (?,?)',
  getcheckplan: 'select b.Store_name,b.Gps_x,b.Gps_y,c.realname,d.path_name,a.* from plan a LEFT JOIN store b ON (a.store_id = b.Store_id) LEFT JOIN user c ON (a.userid = c.username) LEFT JOIN path d ON (a.path_id = d.path_id) where plan_date BETWEEN ? and ? ',
  getsaleactual: 'SELECT a.user_id,e.realname,f.name departname,a.area_name,a.store_id,d.store_name,b.brand_name,b.series_name,c.serial_no,a.Product_name,a.sales_unit,sum(a.sales_quantity) sum FROM sales_actual a LEFT JOIN product b on a.product_id=b.Product_id LEFT JOIN product_price c on a.store_id=c.Store_id and a.product_id=c.Product_id LEFT JOIN store d on a.store_id = d.store_id LEFT JOIN user e on e.username = a.user_id LEFT JOIN department f on e.depart = f.id WHERE year(a.sales_date)=? AND month(a.sales_date)=? AND product_status="1" ',
  getmainshelfimage: 'select * from product_image where user_id = ? AND submitdate BETWEEN ? and ? AND type = 0',
  getsafestock: 'select c.serial_no,b.product_box,b.product_name,a.* from safe_stock a left join product b on b.Product_id = a.product_id left join product_price c on (c.Store_id = a.store_id and c.Product_id = a.product_id) where a.store_id = ? and a.date_id in (select max(date_id) from safe_stock where store_id = ?)',
  getexpense: 'select * from expense where userid = ? and plandate BETWEEN ? AND ?',
  adjustexpense: 'insert into expense set adjustmoney = ? , plandate = ? ,userid = ? , expensetype = ? on DUPLICATE KEY UPDATE adjustmoney = ?',
  submitexpense: 'insert into expense set plandate = ? ,expensetype = ?, userid = ?, nature = ? ,fpcount = ?, fpname=?, money = ? on DUPLICATE KEY UPDATE nature = ?,fpcount = ?,  fpname=?,money = ?',
  getparttime: 'select a.*,b.store_name,c.realname from parttime a left join store b on a.storeid = b.Store_id left join user c on b.user_id = c.username where ((entrytime BETWEEN ? and ?) or ((quittime BETWEEN ? and ?) or isfinish = 0)) ',
  addparttime: 'insert into parttime(storeid,username,sex,cardid,phone,work,bankcard,entrytime,isfinish,cardidfile,bankcardfile) values(?,?,?,?,?,?,?,?,0,?,?)',
  updateparttime: 'update parttime set username = ?,sex = ?,cardid = ?,phone = ?,work = ?,bankcard = ?,entrytime = ?, isfinish = ?, quittime = ?, cardidfile = ?, bankcardfile = ?  where id = ?',
  saveexpenseerp: 'replace into expense_erp (plandate,userid,realname,plannature,realnature,btnr,btbz,report,fpcount,adjustmoney) values (?,?,?,?,?,?,?,?,?,?)',



  // 排名相关查询
  getsaletarget_all: 'select c.realname,e.system_name,sum(a.sales_normal)+sum(a.sales_promotion) sum , a.* from sales_target a INNER JOIN store b on b.Store_id = a.store_id INNER JOIN user c on b.user_id = c.username LEFT JOIN department d on d.id = c.depart left join store_area e on (a.system_id = e.system_id) where sales_year = ? and sales_month = ? and d.id = ?',
  getsaleactual_all: 'select c.realname,e.system_name,sum(a.sales_sum) sum , a.* from sales_actual a INNER JOIN store b on b.Store_id = a.store_id INNER JOIN user c on b.user_id = c.username LEFT JOIN department d on d.id = c.depart left join store_area e on (a.system_id = e.system_id) where sales_date BETWEEN ? and ? and d.id = ?',
  getsaletarget_pro: 'select c.realname,e.system_name,sum(a.sales_promotion) sum , a.* from sales_target a INNER JOIN store b on b.Store_id = a.store_id INNER JOIN user c on b.user_id = c.username LEFT JOIN department d on d.id = c.depart left join store_area e on (a.system_id = e.system_id) where sales_year = ? and sales_month = ? and d.id = ?',
  getsaleactual_pro: 'select c.realname,e.system_name,sum(a.sales_sum) sum , a.* from sales_actual a INNER JOIN store b on b.Store_id = a.store_id INNER JOIN user c on b.user_id = c.username LEFT JOIN department d on d.id = c.depart left join store_area e on (a.system_id = e.system_id) where sales_promotionid <> "null" and sales_date BETWEEN ? and ? and d.id = ?',
};

module.exports = sqlmap;
